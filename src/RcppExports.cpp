// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// HAPT
Rcpp::List HAPT(Rcpp::NumericVector x, Rcpp::IntegerVector groups, int maxlevel, int nu_states, int tau_states, Rcpp::NumericVector nu_lims, Rcpp::NumericVector tau_lims, double beta_nu, double beta_tau, double nu_stop_p, double tau_stop_p);
RcppExport SEXP _HAPT_HAPT(SEXP xSEXP, SEXP groupsSEXP, SEXP maxlevelSEXP, SEXP nu_statesSEXP, SEXP tau_statesSEXP, SEXP nu_limsSEXP, SEXP tau_limsSEXP, SEXP beta_nuSEXP, SEXP beta_tauSEXP, SEXP nu_stop_pSEXP, SEXP tau_stop_pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type groups(groupsSEXP);
    Rcpp::traits::input_parameter< int >::type maxlevel(maxlevelSEXP);
    Rcpp::traits::input_parameter< int >::type nu_states(nu_statesSEXP);
    Rcpp::traits::input_parameter< int >::type tau_states(tau_statesSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type nu_lims(nu_limsSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type tau_lims(tau_limsSEXP);
    Rcpp::traits::input_parameter< double >::type beta_nu(beta_nuSEXP);
    Rcpp::traits::input_parameter< double >::type beta_tau(beta_tauSEXP);
    Rcpp::traits::input_parameter< double >::type nu_stop_p(nu_stop_pSEXP);
    Rcpp::traits::input_parameter< double >::type tau_stop_p(tau_stop_pSEXP);
    rcpp_result_gen = Rcpp::wrap(HAPT(x, groups, maxlevel, nu_states, tau_states, nu_lims, tau_lims, beta_nu, beta_tau, nu_stop_p, tau_stop_p));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_HAPT_HAPT", (DL_FUNC) &_HAPT_HAPT, 11},
    {NULL, NULL, 0}
};

RcppExport void R_init_HAPT(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
